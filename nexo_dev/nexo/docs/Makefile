# Makefile para documenta√ß√£o do Nexo
# 
# Comandos dispon√≠veis:
#   make html          - Gera documenta√ß√£o HTML
#   make pdf           - Gera documenta√ß√£o PDF
#   make clean         - Limpa arquivos de build
#   make serve         - Inicia servidor de desenvolvimento
#   make watch         - Modo watch (auto-rebuild)
#   make install-deps  - Instala depend√™ncias de documenta√ß√£o
#   make coverage      - Gera relat√≥rio de cobertura

# Vari√°veis
SPHINXOPTS    ?=
SPHINXBUILD   ?= sphinx-build
SOURCEDIR     = .
BUILDDIR      = _build
DJANGO_MANAGE = python ../manage.py

# Comandos principais
.PHONY: help html pdf epub clean serve watch install-deps coverage auto

help:
	@echo "Sistema de documenta√ß√£o do Nexo"
	@echo ""
	@echo "Comandos dispon√≠veis:"
	@echo "  html          Gerar documenta√ß√£o HTML"
	@echo "  pdf           Gerar documenta√ß√£o PDF"
	@echo "  epub          Gerar documenta√ß√£o EPUB"
	@echo "  clean         Limpar arquivos de build"
	@echo "  serve         Iniciar servidor de desenvolvimento"
	@echo "  watch         Modo watch (rebuild autom√°tico)"
	@echo "  install-deps  Instalar depend√™ncias"
	@echo "  coverage      Relat√≥rio de cobertura"
	@echo "  auto          Modo autom√°tico (Django command)"

html:
	@echo "üî® Gerando documenta√ß√£o HTML..."
	$(SPHINXBUILD) -b html $(SPHINXOPTS) $(SOURCEDIR) $(BUILDDIR)/html
	@echo "‚úÖ Documenta√ß√£o HTML gerada em $(BUILDDIR)/html/"

pdf:
	@echo "üî® Gerando documenta√ß√£o PDF..."
	$(SPHINXBUILD) -b latex $(SPHINXOPTS) $(SOURCEDIR) $(BUILDDIR)/latex
	@cd $(BUILDDIR)/latex && make
	@echo "‚úÖ Documenta√ß√£o PDF gerada em $(BUILDDIR)/latex/"

epub:
	@echo "üî® Gerando documenta√ß√£o EPUB..."
	$(SPHINXBUILD) -b epub $(SPHINXOPTS) $(SOURCEDIR) $(BUILDDIR)/epub
	@echo "‚úÖ Documenta√ß√£o EPUB gerada em $(BUILDDIR)/epub/"

clean:
	@echo "üóëÔ∏è  Limpando arquivos de build..."
	rm -rf $(BUILDDIR)/*
	@echo "‚úÖ Arquivos limpos"

serve: html
	@echo "üåê Iniciando servidor de desenvolvimento..."
	@cd $(BUILDDIR)/html && python -m http.server 8080

watch:
	@echo "üëÄ Iniciando modo watch..."
	sphinx-autobuild $(SOURCEDIR) $(BUILDDIR)/html --port 8080 --open-browser

install-deps:
	@echo "üì¶ Instalando depend√™ncias de documenta√ß√£o..."
	pip install -r ../requirements-docs.txt
	@echo "‚úÖ Depend√™ncias instaladas"

coverage:
	@echo "üìä Gerando relat√≥rio de cobertura..."
	$(SPHINXBUILD) -b coverage $(SPHINXOPTS) $(SOURCEDIR) $(BUILDDIR)/coverage
	@echo "‚úÖ Relat√≥rio gerado em $(BUILDDIR)/coverage/"

auto:
	@echo "ü§ñ Executando modo autom√°tico..."
	$(DJANGO_MANAGE) gerar_documentacao --acao auto --verbose

# Comandos avan√ßados
.PHONY: full-rebuild linkcheck deploy

full-rebuild: clean install-deps auto html
	@echo "üöÄ Rebuild completo finalizado"

linkcheck:
	@echo "üîó Verificando links..."
	$(SPHINXBUILD) -b linkcheck $(SPHINXOPTS) $(SOURCEDIR) $(BUILDDIR)/linkcheck

deploy: full-rebuild
	@echo "üöÄ Preparando para deploy..."
	@# Adicione aqui comandos espec√≠ficos para deploy
	@echo "‚úÖ Documenta√ß√£o pronta para deploy"

# Atalhos para comandos Django
.PHONY: django-create django-update django-delete

django-create:
	$(DJANGO_MANAGE) gerar_documentacao --acao create --incluir-frontend --verbose

django-update:
	$(DJANGO_MANAGE) gerar_documentacao --acao update --incluir-frontend --verbose

django-delete:
	$(DJANGO_MANAGE) gerar_documentacao --acao delete

django-watch:
	$(DJANGO_MANAGE) gerar_documentacao --acao update --watch --port 8080 